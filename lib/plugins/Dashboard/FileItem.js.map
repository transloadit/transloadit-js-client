{"version":3,"sources":["../../../src/plugins/Dashboard/FileItem.js"],"names":["require","getETA","getSpeed","prettyETA","getFileNameAndExtension","truncateString","copyToClipboard","prettyBytes","FileItemProgress","getFileTypeIcon","iconEdit","iconCopy","iconRetry","module","exports","fileItem","props","file","acquirers","isProcessing","progress","preprocess","postprocess","isUploaded","uploadComplete","error","uploadInProgressOrComplete","uploadStarted","uploadInProgress","isPaused","fileName","meta","name","truncatedFileName","isWide","onPauseResumeCancelRetry","ev","retryUpload","id","resumableUploads","pauseUpload","cancelUpload","type","color","preview","icon","percentage","fileID","showProgressDetails","i18n","uploadURL","extension","data","size","source","map","acquirer","e","showFileCard","then","log","info","catch","removeFile"],"mappings":"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","file":"FileItem.js","sourcesContent":["const html = require('yo-yo')\nconst { getETA,\n         getSpeed,\n         prettyETA,\n         getFileNameAndExtension,\n         truncateString,\n         copyToClipboard } = require('../../core/Utils')\nconst prettyBytes = require('prettier-bytes')\nconst FileItemProgress = require('./FileItemProgress')\nconst getFileTypeIcon = require('./getFileTypeIcon')\nconst { iconEdit, iconCopy, iconRetry } = require('./icons')\n\nmodule.exports = function fileItem (props) {\n  const file = props.file\n  const acquirers = props.acquirers\n\n  const isProcessing = file.progress.preprocess || file.progress.postprocess\n  const isUploaded = file.progress.uploadComplete && !isProcessing && !file.error\n  const uploadInProgressOrComplete = file.progress.uploadStarted || isProcessing\n  const uploadInProgress = (file.progress.uploadStarted && !file.progress.uploadComplete) || isProcessing\n  const isPaused = file.isPaused || false\n  const error = file.error || false\n\n  const fileName = getFileNameAndExtension(file.meta.name).name\n  const truncatedFileName = props.isWide ? truncateString(fileName, 15) : fileName\n\n  const onPauseResumeCancelRetry = (ev) => {\n    if (isUploaded) return\n    if (error) {\n      props.retryUpload(file.id)\n      return\n    }\n    if (props.resumableUploads) {\n      props.pauseUpload(file.id)\n    } else {\n      props.cancelUpload(file.id)\n    }\n  }\n\n  return html`<li class=\"UppyDashboardItem\n                        ${uploadInProgress ? 'is-inprogress' : ''}\n                        ${isProcessing ? 'is-processing' : ''}\n                        ${isUploaded ? 'is-complete' : ''}\n                        ${isPaused ? 'is-paused' : ''}\n                        ${error ? 'is-error' : ''}\n                        ${props.resumableUploads ? 'is-resumable' : ''}\"\n                  id=\"uppy_${file.id}\"\n                  title=\"${file.meta.name}\">\n      <div class=\"UppyDashboardItem-preview\">\n        <div class=\"UppyDashboardItem-previewInnerWrap\" style=\"background-color: ${getFileTypeIcon(file.type).color}\">\n          ${file.preview\n            ? html`<img alt=\"${file.name}\" src=\"${file.preview}\">`\n            : html`<div class=\"UppyDashboardItem-previewIconWrap\">\n                <span class=\"UppyDashboardItem-previewIcon\" style=\"color: ${getFileTypeIcon(file.type).color}\">${getFileTypeIcon(file.type).icon}</span>\n                <svg class=\"UppyDashboardItem-previewIconBg\" width=\"72\" height=\"93\" viewBox=\"0 0 72 93\"><g><path d=\"M24.08 5h38.922A2.997 2.997 0 0 1 66 8.003v74.994A2.997 2.997 0 0 1 63.004 86H8.996A2.998 2.998 0 0 1 6 83.01V22.234L24.08 5z\" fill=\"#FFF\"/><path d=\"M24 5L6 22.248h15.007A2.995 2.995 0 0 0 24 19.244V5z\" fill=\"#E4E4E4\"/></g></svg>\n              </div>`\n          }\n        </div>\n        <div class=\"UppyDashboardItem-progress\">\n          <button class=\"UppyDashboardItem-progressBtn\"\n                  type=\"button\"\n                  title=\"${isUploaded\n                          ? 'upload complete'\n                          : props.resumableUploads\n                            ? file.isPaused\n                              ? 'resume upload'\n                              : 'pause upload'\n                            : 'cancel upload'\n                        }\"\n                  onclick=${onPauseResumeCancelRetry}>\n            ${error\n              ? iconRetry()\n              : FileItemProgress({\n                progress: file.progress.percentage,\n                fileID: file.id\n              })\n            }\n          </button>\n          ${props.showProgressDetails\n            ? html`<div class=\"UppyDashboardItem-progressInfo\"\n                        title=\"${props.i18n('fileProgress')}\"\n                        aria-label=\"${props.i18n('fileProgress')}\">\n                ${!file.isPaused && !isUploaded\n                  ? html`<span>${prettyETA(getETA(file.progress))} ・ ↑ ${prettyBytes(getSpeed(file.progress))}/s</span>`\n                  : null\n                }\n              </div>`\n            : null\n          }\n        </div>\n      </div>\n    <div class=\"UppyDashboardItem-info\">\n      <h4 class=\"UppyDashboardItem-name\" title=\"${fileName}\">\n        ${file.uploadURL\n          ? html`<a href=\"${file.uploadURL}\" target=\"_blank\">\n              ${file.extension ? truncatedFileName + '.' + file.extension : truncatedFileName}\n            </a>`\n          : file.extension ? truncatedFileName + '.' + file.extension : truncatedFileName\n        }\n      </h4>\n      <div class=\"UppyDashboardItem-status\">\n        ${file.data.size && html`<div class=\"UppyDashboardItem-statusSize\">${prettyBytes(file.data.size)}</div>`}\n        ${file.source && html`<div class=\"UppyDashboardItem-sourceIcon\">\n            ${acquirers.map(acquirer => {\n              if (acquirer.id === file.source) return html`<span title=\"${props.i18n('fileSource')}: ${acquirer.name}\">${acquirer.icon()}</span>`\n            })}\n          </div>`\n        }\n      </div>\n      ${!uploadInProgressOrComplete\n        ? html`<button class=\"UppyDashboardItem-edit\"\n                       type=\"button\"\n                       aria-label=\"Edit file\"\n                       title=\"Edit file\"\n                       onclick=${(e) => props.showFileCard(file.id)}>\n                        ${iconEdit()}</button>`\n        : null\n      }\n      ${file.uploadURL\n        ? html`<button class=\"UppyDashboardItem-copyLink\"\n                       type=\"button\"\n                       aria-label=\"Copy link\"\n                       title=\"Copy link\"\n                       onclick=${() => {\n                         copyToClipboard(file.uploadURL, props.i18n('copyLinkToClipboardFallback'))\n                          .then(() => {\n                            props.log('Link copied to clipboard.')\n                            props.info(props.i18n('copyLinkToClipboardSuccess'), 'info', 3000)\n                          })\n                          .catch(props.log)\n                       }}>${iconCopy()}</button>`\n        : null\n      }\n    </div>\n    <div class=\"UppyDashboardItem-action\">\n      ${!isUploaded\n        ? html`<button class=\"UppyDashboardItem-remove\"\n                       type=\"button\"\n                       aria-label=\"Remove file\"\n                       title=\"Remove file\"\n                       onclick=${() => props.removeFile(file.id)}>\n                 <svg class=\"UppyIcon\" width=\"22\" height=\"21\" viewBox=\"0 0 18 17\">\n                   <ellipse cx=\"8.62\" cy=\"8.383\" rx=\"8.62\" ry=\"8.383\"/>\n                   <path stroke=\"#FFF\" fill=\"#FFF\" d=\"M11 6.147L10.85 6 8.5 8.284 6.15 6 6 6.147 8.35 8.43 6 10.717l.15.146L8.5 8.578l2.35 2.284.15-.146L8.65 8.43z\"/>\n                 </svg>\n               </button>`\n        : null\n      }\n    </div>\n  </li>`\n}\n"]}