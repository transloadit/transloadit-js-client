{"version":3,"sources":["../../../src/plugins/Dashboard/Dashboard.js"],"names":["FileList","require","Tabs","FileCard","UploadBtn","isTouchDevice","toArray","closeIcon","module","exports","Dashboard","props","handleInputChange","ev","preventDefault","files","target","forEach","file","addFile","source","id","name","type","data","handlePaste","clipboardData","items","kind","blob","getAsFile","log","info","updateDashboardElWidth","inline","modal","isHidden","i18n","semiTransparent","isWide","handleClickOutside","maxWidth","maxHeight","closeModal","acquirers","panelSelectorPrefix","showPanel","fileCardFor","done","fileCardDone","metaFields","showFileCard","showProgressDetails","totalProgress","totalFileCount","note","removeFile","pauseAll","resumeAll","pauseUpload","startUpload","cancelUpload","retryUpload","resumableUploads","hideUploadButton","autoProceed","newFiles","length","newFileCount","activePanel","hideAllPanels","getPlugin","render","state","progressindicators","map"],"mappings":"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","file":"Dashboard.js","sourcesContent":["const html = require('yo-yo')\nconst FileList = require('./FileList')\nconst Tabs = require('./Tabs')\nconst FileCard = require('./FileCard')\nconst UploadBtn = require('./UploadBtn')\nconst { isTouchDevice, toArray } = require('../../core/Utils')\nconst { closeIcon } = require('./icons')\n\n// http://dev.edenspiekermann.com/2016/02/11/introducing-accessible-modal-dialog\n\nmodule.exports = function Dashboard (props) {\n  function handleInputChange (ev) {\n    ev.preventDefault()\n    const files = toArray(ev.target.files)\n\n    files.forEach((file) => {\n      props.addFile({\n        source: props.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      })\n    })\n  }\n\n  // @TODO Exprimental, work in progress\n  // no names, weird API, Chrome-only http://stackoverflow.com/a/22940020\n  function handlePaste (ev) {\n    ev.preventDefault()\n\n    const files = toArray(ev.clipboardData.items)\n    files.forEach((file) => {\n      if (file.kind !== 'file') return\n\n      const blob = file.getAsFile()\n      if (!blob) {\n        props.log('[Dashboard] File pasted, but the file blob is empty')\n        props.info('Error pasting file', 'error')\n        return\n      }\n      props.log('[Dashboard] File pasted')\n      props.addFile({\n        source: props.id,\n        name: file.name,\n        type: file.type,\n        data: blob\n      })\n    })\n  }\n\n  return html`\n    <div class=\"Uppy UppyTheme--default UppyDashboard\n                          ${isTouchDevice() ? 'Uppy--isTouchDevice' : ''}\n                          ${props.semiTransparent ? 'UppyDashboard--semiTransparent' : ''}\n                          ${!props.inline ? 'UppyDashboard--modal' : ''}\n                          ${props.isWide ? 'UppyDashboard--wide' : ''}\"\n          aria-hidden=\"${props.inline ? 'false' : props.modal.isHidden}\"\n          aria-label=\"${!props.inline\n                       ? props.i18n('dashboardWindowTitle')\n                       : props.i18n('dashboardTitle')}\"\n          role=\"dialog\"\n          onpaste=${handlePaste}\n          onload=${() => props.updateDashboardElWidth()}>\n\n    <div class=\"UppyDashboard-overlay\" onclick=${props.handleClickOutside}></div>\n\n    <div class=\"UppyDashboard-inner\"\n         tabindex=\"0\"\n         style=\"\n          ${props.inline && props.maxWidth ? `max-width: ${props.maxWidth}px;` : ''}\n          ${props.inline && props.maxHeight ? `max-height: ${props.maxHeight}px;` : ''}\n         \">\n      <button class=\"UppyDashboard-close\"\n              type=\"button\"\n              aria-label=\"${props.i18n('closeModal')}\"\n              title=\"${props.i18n('closeModal')}\"\n              onclick=${props.closeModal}>${closeIcon()}</button>\n\n      <div class=\"UppyDashboard-innerWrap\">\n\n        ${Tabs({\n          files: props.files,\n          handleInputChange: handleInputChange,\n          acquirers: props.acquirers,\n          panelSelectorPrefix: props.panelSelectorPrefix,\n          showPanel: props.showPanel,\n          i18n: props.i18n\n        })}\n\n        ${FileCard({\n          files: props.files,\n          fileCardFor: props.fileCardFor,\n          done: props.fileCardDone,\n          metaFields: props.metaFields,\n          log: props.log,\n          i18n: props.i18n\n        })}\n\n        <div class=\"UppyDashboard-filesContainer\">\n\n          ${FileList({\n            acquirers: props.acquirers,\n            files: props.files,\n            handleInputChange: handleInputChange,\n            showFileCard: props.showFileCard,\n            showProgressDetails: props.showProgressDetails,\n            totalProgress: props.totalProgress,\n            totalFileCount: props.totalFileCount,\n            info: props.info,\n            note: props.note,\n            i18n: props.i18n,\n            log: props.log,\n            removeFile: props.removeFile,\n            pauseAll: props.pauseAll,\n            resumeAll: props.resumeAll,\n            pauseUpload: props.pauseUpload,\n            startUpload: props.startUpload,\n            cancelUpload: props.cancelUpload,\n            retryUpload: props.retryUpload,\n            resumableUploads: props.resumableUploads,\n            isWide: props.isWide\n          })}\n\n          <div class=\"UppyDashboard-actions\">\n            ${!props.hideUploadButton && !props.autoProceed && props.newFiles.length > 0\n              ? UploadBtn({\n                i18n: props.i18n,\n                startUpload: props.startUpload,\n                newFileCount: props.newFiles.length\n              })\n              : null\n            }\n          </div>\n\n        </div>\n\n        <div class=\"UppyDashboardContent-panel\"\n             role=\"tabpanel\"\n             aria-hidden=\"${props.activePanel ? 'false' : 'true'}\">\n          <div class=\"UppyDashboardContent-bar\">\n            <h2 class=\"UppyDashboardContent-title\">\n              ${props.i18n('importFrom')} ${props.activePanel ? props.activePanel.name : null}\n            </h2>\n            <button class=\"UppyDashboardContent-back\"\n                    type=\"button\"\n                    onclick=${props.hideAllPanels}>${props.i18n('done')}</button>\n          </div>\n          ${props.activePanel ? props.getPlugin(props.activePanel.id).render(props.state) : ''}\n        </div>\n\n        <div class=\"UppyDashboard-progressindicators\">\n          ${props.progressindicators.map((target) => {\n            return props.getPlugin(target.id).render(props.state)\n          })}\n        </div>\n\n      </div>\n    </div>\n  </div>\n  `\n}\n"]}