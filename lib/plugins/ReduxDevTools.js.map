{"version":3,"sources":["../../src/plugins/ReduxDevTools.js"],"names":["Plugin","require","module","exports","core","opts","type","id","title","defaultOptions","handleStateChange","bind","initDevTools","prevState","nextState","patch","devTools","send","window","devToolsExtension","connect","devToolsUnsubscribe","subscribe","message","console","log","payload","reset","computedStates","nextLiftedState","state","length","updateAll","JSON","parse","install","withDevTools","__REDUX_DEVTOOLS_EXTENSION__","on","uninstall","emitter","off","handleStateUpdate"],"mappings":";;;;;;;;;;AAAA,IAAMA,SAASC,QAAQ,UAAR,CAAf;;AAEA;;;;;;AAMAC,OAAOC,OAAP;AAAA;;AACE,yBAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AAAA;;AAAA,iDACvB,mBAAMD,IAAN,EAAYC,IAAZ,CADuB;;AAEvB,UAAKC,IAAL,GAAY,UAAZ;AACA,UAAKC,EAAL,GAAU,eAAV;AACA,UAAKC,KAAL,GAAa,gBAAb;;AAEA;AACA,QAAMC,iBAAiB,EAAvB;;AAEA;AACA,UAAKJ,IAAL,GAAY,SAAc,EAAd,EAAkBI,cAAlB,EAAkCJ,IAAlC,CAAZ;;AAEA,UAAKK,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AAbuB;AAcxB;;AAfH,0BAiBED,iBAjBF,8BAiBqBG,SAjBrB,EAiBgCC,SAjBhC,EAiB2CC,KAjB3C,EAiBkD;AAC9C,SAAKC,QAAL,CAAcC,IAAd,CAAmB,mBAAnB,EAAwCH,SAAxC;AACD,GAnBH;;AAAA,0BAqBEF,YArBF,2BAqBkB;AAAA;;AACd,SAAKI,QAAL,GAAgBE,OAAOC,iBAAP,CAAyBC,OAAzB,EAAhB;AACA,SAAKC,mBAAL,GAA2B,KAAKL,QAAL,CAAcM,SAAd,CAAwB,UAACC,OAAD,EAAa;AAC9D,UAAIA,QAAQjB,IAAR,KAAiB,UAArB,EAAiC;AAC/BkB,gBAAQC,GAAR,CAAYF,QAAQG,OAAR,CAAgBpB,IAA5B;;AAEA;AACA,gBAAQiB,QAAQG,OAAR,CAAgBpB,IAAxB;AACE,eAAK,OAAL;AACE,mBAAKF,IAAL,CAAUuB,KAAV;AACA;AACF,eAAK,cAAL;AACE,gBAAMC,iBAAiBL,QAAQG,OAAR,CAAgBG,eAAhB,CAAgCD,cAAvD;AACA,mBAAKxB,IAAL,CAAU0B,KAAV,GAAkB,SAAc,EAAd,EAAkB,OAAK1B,IAAL,CAAU0B,KAA5B,EAAmCF,eAAeA,eAAeG,MAAf,GAAwB,CAAvC,EAA0CD,KAA7E,CAAlB;AACA,mBAAK1B,IAAL,CAAU4B,SAAV,CAAoB,OAAK5B,IAAL,CAAU0B,KAA9B;AACA;AACF,eAAK,eAAL;AACA,eAAK,gBAAL;AACE;AACA,mBAAK1B,IAAL,CAAU0B,KAAV,GAAkB,SAAc,EAAd,EAAkB,OAAK1B,IAAL,CAAU0B,KAA5B,EAAmCG,KAAKC,KAAL,CAAWX,QAAQO,KAAnB,CAAnC,CAAlB;AACA,mBAAK1B,IAAL,CAAU4B,SAAV,CAAoB,OAAK5B,IAAL,CAAU0B,KAA9B;AAbJ;AAeD;AACF,KArB0B,CAA3B;AAsBD,GA7CH;;AAAA,0BA+CEK,OA/CF,sBA+Ca;AACT,SAAKC,YAAL,GAAoB,OAAOlB,MAAP,KAAkB,WAAlB,IAAiCA,OAAOmB,4BAA5D;AACA,QAAI,KAAKD,YAAT,EAAuB;AACrB,WAAKxB,YAAL;AACA,WAAKR,IAAL,CAAUkC,EAAV,CAAa,mBAAb,EAAkC,KAAK5B,iBAAvC;AACD;AACF,GArDH;;AAAA,0BAuDE6B,SAvDF,wBAuDe;AACX,QAAI,KAAKH,YAAT,EAAuB;AACrB,WAAKhC,IAAL,CAAUoC,OAAV,CAAkBC,GAAlB,CAAsB,mBAAtB,EAA2C,KAAKC,iBAAhD;AACD;AACF,GA3DH;;AAAA;AAAA,EAA6C1C,MAA7C","file":"ReduxDevTools.js","sourcesContent":["const Plugin = require('./Plugin')\n\n/**\n * Add Redux DevTools support to Uppy\n *\n * See https://medium.com/@zalmoxis/redux-devtools-without-redux-or-how-to-have-a-predictable-state-with-any-architecture-61c5f5a7716f\n * and https://github.com/zalmoxisus/mobx-remotedev/blob/master/src/monitorActions.js\n */\nmodule.exports = class ReduxDevTools extends Plugin {\n  constructor (core, opts) {\n    super(core, opts)\n    this.type = 'debugger'\n    this.id = 'ReduxDevTools'\n    this.title = 'Redux DevTools'\n\n    // set default options\n    const defaultOptions = {}\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.handleStateChange = this.handleStateChange.bind(this)\n    this.initDevTools = this.initDevTools.bind(this)\n  }\n\n  handleStateChange (prevState, nextState, patch) {\n    this.devTools.send('UPPY_STATE_UPDATE', nextState)\n  }\n\n  initDevTools () {\n    this.devTools = window.devToolsExtension.connect()\n    this.devToolsUnsubscribe = this.devTools.subscribe((message) => {\n      if (message.type === 'DISPATCH') {\n        console.log(message.payload.type)\n\n        // Implement monitors actions\n        switch (message.payload.type) {\n          case 'RESET':\n            this.core.reset()\n            return\n          case 'IMPORT_STATE':\n            const computedStates = message.payload.nextLiftedState.computedStates\n            this.core.state = Object.assign({}, this.core.state, computedStates[computedStates.length - 1].state)\n            this.core.updateAll(this.core.state)\n            return\n          case 'JUMP_TO_STATE':\n          case 'JUMP_TO_ACTION':\n            // this.setState(state)\n            this.core.state = Object.assign({}, this.core.state, JSON.parse(message.state))\n            this.core.updateAll(this.core.state)\n        }\n      }\n    })\n  }\n\n  install () {\n    this.withDevTools = typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__\n    if (this.withDevTools) {\n      this.initDevTools()\n      this.core.on('core:state-update', this.handleStateChange)\n    }\n  }\n\n  uninstall () {\n    if (this.withDevTools) {\n      this.core.emitter.off('core:state-update', this.handleStateUpdate)\n    }\n  }\n}\n"]}