{"version":3,"sources":["../../../src/plugins/Webcam/index.js"],"names":["Plugin","require","Translator","getFileTypeExtension","canvasToBlob","supportsMediaRecorder","WebcamIcon","CameraScreen","PermissionsScreen","getMediaDevices","navigator","mediaDevices","getUserMedia","mozGetUserMedia","webkitGetUserMedia","opts","resolve","reject","call","module","exports","core","supportsUserMedia","protocol","location","match","type","id","title","icon","focus","bind","defaultLocale","strings","smile","defaultOptions","onBeforeSnapshot","Promise","countdown","locale","modes","translator","i18n","translate","install","setPluginState","render","start","stop","takeSnapshot","startRecording","stopRecording","oneTwoThreeSmile","webcamActive","Error","acceptsAudio","indexOf","acceptsVideo","audio","video","then","stream","streamSrc","URL","createObjectURL","cameraReady","catch","err","cameraError","recorder","MediaRecorder","recordingChunks","addEventListener","event","push","data","isRecording","stopped","getVideo","file","addFile","error","getAudioTracks","forEach","track","getVideoTracks","getVideoElement","target","querySelector","count","countDown","setInterval","clearInterval","captureInProgress","info","setTimeout","message","getImage","tagFile","name","Date","now","mimeType","canvas","document","createElement","width","videoWidth","height","videoHeight","getContext","drawImage","blob","source","File","fileExtension","Blob","state","webcamState","getPluginState","onSnapshot","onStartRecording","onStopRecording","onFocus","onStop","supportsRecording","recording","src","plugin","mount","uninstall","unmount"],"mappings":"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","file":"index.js","sourcesContent":["const Plugin = require('../Plugin')\nconst Translator = require('../../core/Translator')\nconst {\n  getFileTypeExtension,\n  canvasToBlob\n} = require('../../core/Utils')\nconst supportsMediaRecorder = require('./supportsMediaRecorder')\nconst WebcamIcon = require('./WebcamIcon')\nconst CameraScreen = require('./CameraScreen')\nconst PermissionsScreen = require('./PermissionsScreen')\n\n// Setup getUserMedia, with polyfill for older browsers\n// Adapted from: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\nfunction getMediaDevices () {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices\n  }\n\n  let getUserMedia = navigator.mozGetUserMedia || navigator.webkitGetUserMedia\n  if (!getUserMedia) {\n    return null\n  }\n\n  return {\n    getUserMedia (opts) {\n      return new Promise((resolve, reject) => {\n        getUserMedia.call(navigator, opts, resolve, reject)\n      })\n    }\n  }\n}\n\n/**\n * Webcam\n */\nmodule.exports = class Webcam extends Plugin {\n  constructor (core, opts) {\n    super(core, opts)\n    this.mediaDevices = getMediaDevices()\n    this.supportsUserMedia = !!this.mediaDevices\n    this.protocol = location.protocol.match(/https/i) ? 'https' : 'http'\n    this.type = 'acquirer'\n    this.id = 'Webcam'\n    this.title = 'Webcam'\n    this.icon = WebcamIcon\n    this.focus = this.focus.bind(this)\n\n    const defaultLocale = {\n      strings: {\n        smile: 'Smile!'\n      }\n    }\n\n    // set default options\n    const defaultOptions = {\n      onBeforeSnapshot: () => Promise.resolve(),\n      countdown: false,\n      locale: defaultLocale,\n      modes: [\n        'video-audio',\n        'video-only',\n        'audio-only',\n        'picture'\n      ]\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\n\n    // i18n\n    this.translator = new Translator({locale: this.locale})\n    this.i18n = this.translator.translate.bind(this.translator)\n\n    this.install = this.install.bind(this)\n    this.setPluginState = this.setPluginState.bind(this)\n\n    this.render = this.render.bind(this)\n\n    // Camera controls\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.takeSnapshot = this.takeSnapshot.bind(this)\n    this.startRecording = this.startRecording.bind(this)\n    this.stopRecording = this.stopRecording.bind(this)\n    this.oneTwoThreeSmile = this.oneTwoThreeSmile.bind(this)\n\n    this.webcamActive = false\n\n    if (this.opts.countdown) {\n      this.opts.onBeforeSnapshot = this.oneTwoThreeSmile\n    }\n  }\n\n  start () {\n    if (!this.mediaDevices) {\n      return Promise.reject(new Error('Webcam access not supported'))\n    }\n\n    this.webcamActive = true\n\n    const acceptsAudio = this.opts.modes.indexOf('video-audio') !== -1 ||\n      this.opts.modes.indexOf('audio-only') !== -1\n    const acceptsVideo = this.opts.modes.indexOf('video-audio') !== -1 ||\n      this.opts.modes.indexOf('video-only') !== -1 ||\n      this.opts.modes.indexOf('picture') !== -1\n\n    // ask user for access to their camera\n    return this.mediaDevices\n      .getUserMedia({\n        audio: acceptsAudio,\n        video: acceptsVideo\n      })\n      .then((stream) => {\n        this.stream = stream\n        this.streamSrc = URL.createObjectURL(this.stream)\n        this.setPluginState({\n          cameraReady: true\n        })\n      })\n      .catch((err) => {\n        this.setPluginState({\n          cameraError: err\n        })\n      })\n  }\n\n  startRecording () {\n    // TODO We can check here if any of the mime types listed in the\n    // mimeToExtensions map in Utils.js are supported, and prefer to use one of\n    // those.\n    // Right now we let the browser pick a type that it deems appropriate.\n    this.recorder = new MediaRecorder(this.stream)\n    this.recordingChunks = []\n    this.recorder.addEventListener('dataavailable', (event) => {\n      this.recordingChunks.push(event.data)\n    })\n    this.recorder.start()\n\n    this.setPluginState({\n      isRecording: true\n    })\n  }\n\n  stopRecording () {\n    const stopped = new Promise((resolve, reject) => {\n      this.recorder.addEventListener('stop', () => {\n        resolve()\n      })\n      this.recorder.stop()\n    })\n\n    return stopped.then(() => {\n      this.setPluginState({\n        isRecording: false\n      })\n      return this.getVideo()\n    }).then((file) => {\n      return this.core.addFile(file)\n    }).then(() => {\n      this.recordingChunks = null\n      this.recorder = null\n    }, (error) => {\n      this.recordingChunks = null\n      this.recorder = null\n      throw error\n    })\n  }\n\n  stop () {\n    this.stream.getAudioTracks().forEach((track) => {\n      track.stop()\n    })\n    this.stream.getVideoTracks().forEach((track) => {\n      track.stop()\n    })\n    this.webcamActive = false\n    this.stream = null\n    this.streamSrc = null\n  }\n\n  getVideoElement () {\n    return this.target.querySelector('.UppyWebcam-video')\n  }\n\n  oneTwoThreeSmile () {\n    return new Promise((resolve, reject) => {\n      let count = this.opts.countdown\n\n      let countDown = setInterval(() => {\n        if (!this.webcamActive) {\n          clearInterval(countDown)\n          this.captureInProgress = false\n          return reject(new Error('Webcam is not active'))\n        }\n\n        if (count > 0) {\n          this.core.info(`${count}...`, 'warning', 800)\n          count--\n        } else {\n          clearInterval(countDown)\n          this.core.info(this.i18n('smile'), 'success', 1500)\n          setTimeout(() => resolve(), 1500)\n        }\n      }, 1000)\n    })\n  }\n\n  takeSnapshot () {\n    if (this.captureInProgress) return\n    this.captureInProgress = true\n\n    this.opts.onBeforeSnapshot().catch((err) => {\n      const message = typeof err === 'object' ? err.message : err\n      this.core.info(message, 'error', 5000)\n      return Promise.reject(new Error(`onBeforeSnapshot: ${message}`))\n    }).then(() => {\n      return this.getImage()\n    }).then((tagFile) => {\n      this.captureInProgress = false\n      this.core.addFile(tagFile)\n    }, (error) => {\n      this.captureInProgress = false\n      throw error\n    })\n  }\n\n  getImage () {\n    const video = this.getVideoElement()\n    if (!video) {\n      return Promise.reject(new Error('No video element found, likely due to the Webcam tab being closed.'))\n    }\n\n    const name = `webcam-${Date.now()}.jpg`\n    const mimeType = 'image/jpeg'\n\n    const canvas = document.createElement('canvas')\n    canvas.width = video.videoWidth\n    canvas.height = video.videoHeight\n    canvas.getContext('2d').drawImage(video, 0, 0)\n\n    return canvasToBlob(canvas, mimeType).then((blob) => {\n      return {\n        source: this.id,\n        name: name,\n        data: new File([blob], name, { type: mimeType }),\n        type: mimeType\n      }\n    })\n  }\n\n  getVideo () {\n    const mimeType = this.recordingChunks[0].type\n    const fileExtension = getFileTypeExtension(mimeType)\n\n    if (!fileExtension) {\n      return Promise.reject(new Error(`Could not retrieve recording: Unsupported media type \"${mimeType}\"`))\n    }\n\n    const name = `webcam-${Date.now()}.${fileExtension}`\n    const blob = new Blob(this.recordingChunks, { type: mimeType })\n    const file = {\n      source: this.id,\n      name: name,\n      data: new File([blob], name, { type: mimeType }),\n      type: mimeType\n    }\n\n    return Promise.resolve(file)\n  }\n\n  focus () {\n    if (this.opts.countdown) return\n    setTimeout(() => {\n      this.core.info(this.i18n('smile'), 'success', 1500)\n    }, 1000)\n  }\n\n  render (state) {\n    if (!this.webcamActive) {\n      this.start()\n    }\n\n    const webcamState = this.getPluginState()\n\n    if (!webcamState.cameraReady) {\n      return PermissionsScreen(webcamState)\n    }\n\n    return CameraScreen(Object.assign({}, webcamState, {\n      onSnapshot: this.takeSnapshot,\n      onStartRecording: this.startRecording,\n      onStopRecording: this.stopRecording,\n      onFocus: this.focus,\n      onStop: this.stop,\n      modes: this.opts.modes,\n      supportsRecording: supportsMediaRecorder(),\n      recording: webcamState.isRecording,\n      src: this.streamSrc\n    }))\n  }\n\n  install () {\n    this.setPluginState({\n      cameraReady: false\n    })\n\n    const target = this.opts.target\n    const plugin = this\n    this.target = this.mount(target, plugin)\n  }\n\n  uninstall () {\n    if (this.stream) {\n      this.stop()\n    }\n\n    this.unmount()\n  }\n}\n"]}