{"version":3,"sources":["../../../src/plugins/StatusBar/index.js"],"names":["Plugin","require","Translator","StatusBar","getSpeed","getBytesRemaining","prettyETA","prettyBytes","module","exports","core","opts","id","title","type","defaultLocale","strings","uploading","uploadComplete","uploadFailed","paused","error","retry","pressToRetry","retryUpload","resumeUpload","cancelUpload","pauseUpload","defaultOptions","target","showProgressDetails","locale","translator","i18n","translate","bind","render","install","getTotalSpeed","files","totalSpeed","forEach","file","progress","getTotalETA","totalBytesRemaining","reduce","total","Math","round","state","uploadStartedFiles","Object","keys","filter","uploadStarted","completeFiles","erroredFiles","inProgressFiles","isPaused","processingFiles","preprocess","postprocess","inProgressFilesArray","push","totalETA","totalSize","totalUploadedSize","bytesTotal","bytesUploaded","isUploadStarted","length","isAllComplete","totalProgress","isAllErrored","isAllPaused","resumableUploads","getState","capabilities","pauseAll","resumeAll","retryAll","cancelAll","complete","inProgress","plugin","mount","uninstall","unmount"],"mappings":"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","file":"index.js","sourcesContent":["const Plugin = require('../Plugin')\nconst Translator = require('../../core/Translator')\nconst StatusBar = require('./StatusBar')\nconst { getSpeed } = require('../../core/Utils')\nconst { getBytesRemaining } = require('../../core/Utils')\nconst { prettyETA } = require('../../core/Utils')\nconst prettyBytes = require('prettier-bytes')\n\n/**\n * A status bar.\n */\nmodule.exports = class StatusBarUI extends Plugin {\n  constructor (core, opts) {\n    super(core, opts)\n    this.id = 'StatusBar'\n    this.title = 'StatusBar'\n    this.type = 'progressindicator'\n\n    const defaultLocale = {\n      strings: {\n        uploading: 'Uploading',\n        uploadComplete: 'Upload complete',\n        uploadFailed: 'Upload failed',\n        paused: 'Paused',\n        error: 'Error',\n        retry: 'Retry',\n        pressToRetry: 'Press to retry',\n        retryUpload: 'Retry upload',\n        resumeUpload: 'Resume upload',\n        cancelUpload: 'Cancel upload',\n        pauseUpload: 'Pause upload'\n      }\n    }\n\n    // set default options\n    const defaultOptions = {\n      target: 'body',\n      showProgressDetails: false,\n      locale: defaultLocale\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\n\n    this.translator = new Translator({locale: this.locale})\n    this.i18n = this.translator.translate.bind(this.translator)\n\n    this.render = this.render.bind(this)\n    this.install = this.install.bind(this)\n  }\n\n  getTotalSpeed (files) {\n    let totalSpeed = 0\n    files.forEach((file) => {\n      totalSpeed = totalSpeed + getSpeed(file.progress)\n    })\n    return totalSpeed\n  }\n\n  getTotalETA (files) {\n    const totalSpeed = this.getTotalSpeed(files)\n    if (totalSpeed === 0) {\n      return 0\n    }\n\n    const totalBytesRemaining = files.reduce((total, file) => {\n      return total + getBytesRemaining(file.progress)\n    }, 0)\n\n    return Math.round(totalBytesRemaining / totalSpeed * 10) / 10\n  }\n\n  render (state) {\n    const files = state.files\n\n    const uploadStartedFiles = Object.keys(files).filter((file) => {\n      return files[file].progress.uploadStarted\n    })\n    const completeFiles = Object.keys(files).filter((file) => {\n      return files[file].progress.uploadComplete\n    })\n    const erroredFiles = Object.keys(files).filter((file) => {\n      return files[file].error\n    })\n    const inProgressFiles = Object.keys(files).filter((file) => {\n      return !files[file].progress.uploadComplete &&\n             files[file].progress.uploadStarted &&\n             !files[file].isPaused\n    })\n    const processingFiles = Object.keys(files).filter((file) => {\n      return files[file].progress.preprocess || files[file].progress.postprocess\n    })\n\n    let inProgressFilesArray = []\n    inProgressFiles.forEach((file) => {\n      inProgressFilesArray.push(files[file])\n    })\n\n    const totalSpeed = prettyBytes(this.getTotalSpeed(inProgressFilesArray))\n    const totalETA = prettyETA(this.getTotalETA(inProgressFilesArray))\n\n    // total size and uploaded size\n    let totalSize = 0\n    let totalUploadedSize = 0\n    inProgressFilesArray.forEach((file) => {\n      totalSize = totalSize + (file.progress.bytesTotal || 0)\n      totalUploadedSize = totalUploadedSize + (file.progress.bytesUploaded || 0)\n    })\n    totalSize = prettyBytes(totalSize)\n    totalUploadedSize = prettyBytes(totalUploadedSize)\n\n    const isUploadStarted = uploadStartedFiles.length > 0\n\n    const isAllComplete = state.totalProgress === 100 &&\n      completeFiles.length === Object.keys(files).length &&\n      processingFiles.length === 0\n\n    const isAllErrored = isUploadStarted &&\n      erroredFiles.length === uploadStartedFiles.length\n\n    const isAllPaused = inProgressFiles.length === 0 &&\n      !isAllComplete &&\n      !isAllErrored &&\n      uploadStartedFiles.length > 0\n\n    const resumableUploads = this.core.getState().capabilities.resumableUploads || false\n\n    return StatusBar({\n      error: state.error,\n      totalProgress: state.totalProgress,\n      totalSize: totalSize,\n      totalUploadedSize: totalUploadedSize,\n      uploadStartedFiles: uploadStartedFiles,\n      isAllComplete: isAllComplete,\n      isAllPaused: isAllPaused,\n      isAllErrored: isAllErrored,\n      isUploadStarted: isUploadStarted,\n      i18n: this.i18n,\n      pauseAll: this.core.pauseAll,\n      resumeAll: this.core.resumeAll,\n      retryAll: this.core.retryAll,\n      cancelAll: this.core.cancelAll,\n      complete: completeFiles.length,\n      inProgress: uploadStartedFiles.length,\n      totalSpeed: totalSpeed,\n      totalETA: totalETA,\n      files: state.files,\n      resumableUploads: resumableUploads\n    })\n  }\n\n  install () {\n    const target = this.opts.target\n    const plugin = this\n    if (target) {\n      this.mount(target, plugin)\n    }\n  }\n\n  uninstall () {\n    this.unmount()\n  }\n}\n"]}