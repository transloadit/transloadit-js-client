{"version":3,"sources":["../../../src/plugins/StatusBar/StatusBar.js"],"names":["throttle","require","progressDetails","props","totalProgress","complete","inProgress","totalUploadedSize","totalSize","totalSpeed","totalETA","throttledProgressDetails","leading","trailing","STATE_ERROR","STATE_WAITING","STATE_PREPROCESSING","STATE_UPLOADING","STATE_POSTPROCESSING","STATE_COMPLETE","getUploadingState","files","isAllErrored","isAllComplete","state","fileIDs","Object","keys","i","length","progress","uploadStarted","uploadComplete","preprocess","postprocess","calculateProcessingProgress","progresses","forEach","fileID","push","mode","message","value","filter","isDeterminate","reduce","total","index","all","module","exports","uploadState","progressValue","progressMode","progressBarContent","ProgressBarProcessing","ProgressBarComplete","ProgressBarUploading","undefined","ProgressBarError","width","Math","round","isUploadStarted","isAllPaused","pauseResumeButtons","i18n","error","retryAll","resumableUploads","title","togglePauseResume","cancelAll","resumeAll","pauseAll"],"mappings":"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","file":"StatusBar.js","sourcesContent":["const html = require('yo-yo')\nconst throttle = require('lodash.throttle')\n\nfunction progressDetails (props) {\n  return html`<span>${props.totalProgress || 0}%・${props.complete} / ${props.inProgress}・${props.totalUploadedSize} / ${props.totalSize}・↑ ${props.totalSpeed}/s・${props.totalETA}</span>`\n}\n\nconst throttledProgressDetails = throttle(progressDetails, 1000, {leading: true, trailing: true})\n\nconst STATE_ERROR = 'error'\nconst STATE_WAITING = 'waiting'\nconst STATE_PREPROCESSING = 'preprocessing'\nconst STATE_UPLOADING = 'uploading'\nconst STATE_POSTPROCESSING = 'postprocessing'\nconst STATE_COMPLETE = 'complete'\n\nfunction getUploadingState (props, files) {\n  // if (props.error) {\n  //   return STATE_ERROR\n  // }\n\n  if (props.isAllErrored) {\n    return STATE_ERROR\n  }\n\n  // If ALL files have been completed, show the completed state.\n  if (props.isAllComplete) {\n    return STATE_COMPLETE\n  }\n\n  let state = STATE_WAITING\n  const fileIDs = Object.keys(files)\n  for (let i = 0; i < fileIDs.length; i++) {\n    const progress = files[fileIDs[i]].progress\n    // If ANY files are being uploaded right now, show the uploading state.\n    if (progress.uploadStarted && !progress.uploadComplete) {\n      return STATE_UPLOADING\n    }\n    // If files are being preprocessed AND postprocessed at this time, we show the\n    // preprocess state. If any files are being uploaded we show uploading.\n    if (progress.preprocess && state !== STATE_UPLOADING) {\n      state = STATE_PREPROCESSING\n    }\n    // If NO files are being preprocessed or uploaded right now, but some files are\n    // being postprocessed, show the postprocess state.\n    if (progress.postprocess && state !== STATE_UPLOADING && state !== STATE_PREPROCESSING) {\n      state = STATE_POSTPROCESSING\n    }\n  }\n  return state\n}\n\nfunction calculateProcessingProgress (files) {\n  // Collect pre or postprocessing progress states.\n  const progresses = []\n  Object.keys(files).forEach((fileID) => {\n    const { progress } = files[fileID]\n    if (progress.preprocess) {\n      progresses.push(progress.preprocess)\n    }\n    if (progress.postprocess) {\n      progresses.push(progress.postprocess)\n    }\n  })\n\n  // In the future we should probably do this differently. For now we'll take the\n  // mode and message from the first file…\n  const { mode, message } = progresses[0]\n  const value = progresses.filter(isDeterminate).reduce((total, progress, index, all) => {\n    return total + progress.value / all.length\n  }, 0)\n  function isDeterminate (progress) {\n    return progress.mode === 'determinate'\n  }\n\n  return {\n    mode,\n    message,\n    value\n  }\n}\n\nmodule.exports = (props) => {\n  props = props || {}\n\n  const uploadState = getUploadingState(props, props.files || {})\n\n  let progressValue = props.totalProgress\n  let progressMode\n  let progressBarContent\n  if (uploadState === STATE_PREPROCESSING || uploadState === STATE_POSTPROCESSING) {\n    const progress = calculateProcessingProgress(props.files)\n    progressMode = progress.mode\n    if (progressMode === 'determinate') {\n      progressValue = progress.value * 100\n    }\n\n    progressBarContent = ProgressBarProcessing(progress)\n  } else if (uploadState === STATE_COMPLETE) {\n    progressBarContent = ProgressBarComplete(props)\n  } else if (uploadState === STATE_UPLOADING) {\n    progressBarContent = ProgressBarUploading(props)\n  } else if (uploadState === STATE_ERROR) {\n    progressValue = undefined\n    progressBarContent = ProgressBarError(props)\n  }\n\n  const width = typeof progressValue === 'number' ? progressValue : 100\n\n  return html`\n    <div class=\"UppyStatusBar is-${uploadState}\"\n                aria-hidden=\"${uploadState === STATE_WAITING}\"\n                title=\"\">\n      <progress style=\"display: none;\" min=\"0\" max=\"100\" value=${progressValue}></progress>\n      <div class=\"UppyStatusBar-progress ${progressMode ? `is-${progressMode}` : ''}\"\n           style=\"width: ${width}%\"></div>\n      ${progressBarContent}\n    </div>\n  `\n}\n\nconst ProgressBarProcessing = (props) => {\n  return html`\n    <div class=\"UppyStatusBar-content\">\n      ${props.mode === 'determinate' ? `${Math.round(props.value * 100)}%・` : ''}\n      ${props.message}\n    </div>\n  `\n}\n\nconst ProgressBarUploading = (props) => {\n  return html`\n    <div class=\"UppyStatusBar-content\">\n      ${props.isUploadStarted && !props.isAllComplete\n        ? !props.isAllPaused\n          ? html`<div title=\"Uploading\">${pauseResumeButtons(props)} Uploading... ${throttledProgressDetails(props)}</div>`\n          : html`<div title=\"Paused\">${pauseResumeButtons(props)} Paused・${props.totalProgress}%</div>`\n        : null\n        }\n    </div>\n  `\n}\n\nconst ProgressBarComplete = ({ totalProgress, i18n }) => {\n  return html`\n    <div class=\"UppyStatusBar-content\">\n      <span title=\"Complete\">\n        <svg aria-hidden=\"true\" class=\"UppyStatusBar-action UppyIcon\" width=\"18\" height=\"17\" viewBox=\"0 0 23 17\">\n          <path d=\"M8.944 17L0 7.865l2.555-2.61 6.39 6.525L20.41 0 23 2.645z\" />\n        </svg>\n        ${i18n('uploadComplete')}・${totalProgress}%\n      </span>\n    </div>\n  `\n}\n\nconst ProgressBarError = ({ error, retryAll, i18n }) => {\n  return html`\n    <div class=\"UppyStatusBar-content\">\n        <button class=\"UppyStatusBar-action\" \n                title=\"${i18n('retryUpload')}\" \n                aria-label=\"${i18n('retryUpload')}\" \n                type=\"button\" \n                onclick=${retryAll}>\n            <svg class=\"UppyIcon\" width=\"28\" height=\"31\" viewBox=\"0 0 16 19\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M16 11a8 8 0 1 1-8-8v2a6 6 0 1 0 6 6h2z\"/>\n              <path d=\"M7.9 3H10v2H7.9z\"/><path d=\"M8.536.5l3.535 3.536-1.414 1.414L7.12 1.914z\"/><path d=\"M10.657 2.621l1.414 1.415L8.536 7.57 7.12 6.157z\"/>\n            </svg></button>\n        ${i18n('uploadFailed')}. \n        <button class=\"UppyStatusBar-retryBtn\" \n            title=\"${i18n('retryUpload')}\" \n            aria-label=\"${i18n('retryUpload')}\" \n            type=\"button\" \n            onclick=${retryAll}>\n          ${i18n('retry')}</button>\n        <span class=\"UppyStatusBar-details\" \n              data-balloon=\"${error}\" \n              data-balloon-pos=\"up\" \n              data-balloon-length=\"large\">?</span>\n      </div>\n  `\n}\n\nconst pauseResumeButtons = (props) => {\n  const { resumableUploads, isAllPaused, i18n } = props\n  const title = resumableUploads\n                ? isAllPaused\n                  ? i18n('resumeUpload')\n                  : i18n('pauseUpload')\n                : i18n('cancelUpload')\n\n  return html`<button title=\"${title}\" class=\"UppyStatusBar-action\" type=\"button\" onclick=${() => togglePauseResume(props)}>\n    ${resumableUploads\n      ? isAllPaused\n        ? html`<svg aria-hidden=\"true\" class=\"UppyIcon\" width=\"15\" height=\"17\" viewBox=\"0 0 11 13\">\n          <path d=\"M1.26 12.534a.67.67 0 0 1-.674.012.67.67 0 0 1-.336-.583v-11C.25.724.38.5.586.382a.658.658 0 0 1 .673.012l9.165 5.5a.66.66 0 0 1 .325.57.66.66 0 0 1-.325.573l-9.166 5.5z\" />\n        </svg>`\n        : html`<svg aria-hidden=\"true\" class=\"UppyIcon\" width=\"16\" height=\"17\" viewBox=\"0 0 12 13\">\n          <path d=\"M4.888.81v11.38c0 .446-.324.81-.722.81H2.722C2.324 13 2 12.636 2 12.19V.81c0-.446.324-.81.722-.81h1.444c.398 0 .722.364.722.81zM9.888.81v11.38c0 .446-.324.81-.722.81H7.722C7.324 13 7 12.636 7 12.19V.81c0-.446.324-.81.722-.81h1.444c.398 0 .722.364.722.81z\"/>\n        </svg>`\n      : html`<svg aria-hidden=\"true\" class=\"UppyIcon\" width=\"16px\" height=\"16px\" viewBox=\"0 0 19 19\">\n        <path d=\"M17.318 17.232L9.94 9.854 9.586 9.5l-.354.354-7.378 7.378h.707l-.62-.62v.706L9.318 9.94l.354-.354-.354-.354L1.94 1.854v.707l.62-.62h-.706l7.378 7.378.354.354.354-.354 7.378-7.378h-.707l.622.62v-.706L9.854 9.232l-.354.354.354.354 7.378 7.378.708-.707-7.38-7.378v.708l7.38-7.38.353-.353-.353-.353-.622-.622-.353-.353-.354.352-7.378 7.38h.708L2.56 1.23 2.208.88l-.353.353-.622.62-.353.355.352.353 7.38 7.38v-.708l-7.38 7.38-.353.353.352.353.622.622.353.353.354-.353 7.38-7.38h-.708l7.38 7.38z\"/>\n      </svg>`\n    }\n  </button>`\n}\n\nconst togglePauseResume = (props) => {\n  if (props.isAllComplete) return\n\n  if (!props.resumableUploads) {\n    return props.cancelAll()\n  }\n\n  if (props.isAllPaused) {\n    return props.resumeAll()\n  }\n\n  return props.pauseAll()\n}\n"]}