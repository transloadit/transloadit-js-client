{"version":3,"sources":["../../src/plugins/Tus.js"],"names":["Plugin","require","tus","UppySocket","emitSocketProgress","getSocketHost","settle","tusDefaultOptions","endpoint","resume","onProgress","onChunkComplete","onSuccess","onError","headers","chunkSize","Infinity","withCredentials","uploadUrl","uploadSize","overridePatchMethod","retryDelays","createEventTracker","emitter","events","on","event","fn","push","remove","forEach","off","module","exports","core","opts","type","id","title","defaultOptions","autoRetry","uploaders","Object","create","uploaderEvents","uploaderSockets","handleResetProgress","bind","handleUpload","files","state","keys","fileID","tusState","setState","resetUploaderReferences","abort","close","upload","file","current","total","log","resolve","reject","optsTus","err","emit","message","bytesUploaded","bytesTotal","onReceiveUploadUrl","url","uploader","name","metadata","meta","Upload","data","onFileRemove","targetFileID","onPause","isPaused","start","onPauseAll","onCancelAll","onResumeAll","error","uploadRemote","remote","serverToken","connectToServerSocket","fetch","method","credentials","body","JSON","stringify","protocol","size","then","res","status","statusText","json","token","getFile","updateFile","host","socket","target","send","onRetry","onRetryAll","progressData","uploadURL","currentFile","newFile","cb","filesToRetry","uploadFiles","promises","map","index","parseInt","length","isRemote","fileIDs","Promise","filesToUpload","addResumableUploadsCapabilityFlag","newCapabilities","getState","capabilities","resumableUploads","install","addUploader","retryAll","uninstall","removeUploader"],"mappings":"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","file":"Tus.js","sourcesContent":["const Plugin = require('./Plugin')\nconst tus = require('tus-js-client')\nconst UppySocket = require('../core/UppySocket')\nconst {\n  emitSocketProgress,\n  getSocketHost,\n  settle\n} = require('../core/Utils')\nrequire('whatwg-fetch')\n\n// Extracted from https://github.com/tus/tus-js-client/blob/master/lib/upload.js#L13\n// excepted we removed 'fingerprint' key to avoid adding more dependencies\nconst tusDefaultOptions = {\n  endpoint: '',\n  resume: true,\n  onProgress: null,\n  onChunkComplete: null,\n  onSuccess: null,\n  onError: null,\n  headers: {},\n  chunkSize: Infinity,\n  withCredentials: false,\n  uploadUrl: null,\n  uploadSize: null,\n  overridePatchMethod: false,\n  retryDelays: null\n}\n\n/**\n * Create a wrapper around an event emitter with a `remove` method to remove\n * all events that were added using the wrapped emitter.\n */\nfunction createEventTracker (emitter) {\n  const events = []\n  return {\n    on (event, fn) {\n      events.push([ event, fn ])\n      return emitter.on(event, fn)\n    },\n    remove () {\n      events.forEach(([ event, fn ]) => {\n        emitter.off(event, fn)\n      })\n    }\n  }\n}\n\n/**\n * Tus resumable file uploader\n *\n */\nmodule.exports = class Tus extends Plugin {\n  constructor (core, opts) {\n    super(core, opts)\n    this.type = 'uploader'\n    this.id = 'Tus'\n    this.title = 'Tus'\n\n    // set default options\n    const defaultOptions = {\n      resume: true,\n      autoRetry: true,\n      retryDelays: [0, 1000, 3000, 5000]\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.uploaders = Object.create(null)\n    this.uploaderEvents = Object.create(null)\n    this.uploaderSockets = Object.create(null)\n\n    this.handleResetProgress = this.handleResetProgress.bind(this)\n    this.handleUpload = this.handleUpload.bind(this)\n  }\n\n  handleResetProgress () {\n    const files = Object.assign({}, this.core.state.files)\n    Object.keys(files).forEach((fileID) => {\n      // Only clone the file object if it has a Tus `uploadUrl` attached.\n      if (files[fileID].tus && files[fileID].tus.uploadUrl) {\n        const tusState = Object.assign({}, files[fileID].tus)\n        delete tusState.uploadUrl\n        files[fileID] = Object.assign({}, files[fileID], { tus: tusState })\n      }\n    })\n\n    this.core.setState({ files })\n  }\n\n  /**\n   * Clean up all references for a file's upload: the tus.Upload instance,\n   * any events related to the file, and the uppy-server WebSocket connection.\n   */\n  resetUploaderReferences (fileID) {\n    if (this.uploaders[fileID]) {\n      this.uploaders[fileID].abort()\n      this.uploaders[fileID] = null\n    }\n    if (this.uploaderEvents[fileID]) {\n      this.uploaderEvents[fileID].remove()\n      this.uploaderEvents[fileID] = null\n    }\n    if (this.uploaderSockets[fileID]) {\n      this.uploaderSockets[fileID].close()\n      this.uploaderSockets[fileID] = null\n    }\n  }\n\n  /**\n   * Create a new Tus upload\n   *\n   * @param {object} file for use with upload\n   * @param {integer} current file in a queue\n   * @param {integer} total number of files in a queue\n   * @returns {Promise}\n   */\n  upload (file, current, total) {\n    this.core.log(`uploading ${current} of ${total}`)\n\n    this.resetUploaderReferences(file.id)\n\n    // Create a new tus upload\n    return new Promise((resolve, reject) => {\n      const optsTus = Object.assign(\n        {},\n        tusDefaultOptions,\n        this.opts,\n        // Install file-specific upload overrides.\n        file.tus || {}\n      )\n\n      optsTus.onError = (err) => {\n        this.core.log(err)\n        this.core.emit('core:upload-error', file.id, err)\n        err.message = `Failed because: ${err.message}`\n\n        this.resetUploaderReferences(file.id)\n        reject(err)\n      }\n\n      optsTus.onProgress = (bytesUploaded, bytesTotal) => {\n        this.onReceiveUploadUrl(file, upload.url)\n        this.core.emit('core:upload-progress', {\n          uploader: this,\n          id: file.id,\n          bytesUploaded: bytesUploaded,\n          bytesTotal: bytesTotal\n        })\n      }\n\n      optsTus.onSuccess = () => {\n        this.core.emit('core:upload-success', file.id, upload, upload.url)\n\n        if (upload.url) {\n          this.core.log('Download ' + upload.file.name + ' from ' + upload.url)\n        }\n\n        this.resetUploaderReferences(file.id)\n        resolve(upload)\n      }\n      optsTus.metadata = file.meta\n\n      const upload = new tus.Upload(file.data, optsTus)\n      this.uploaders[file.id] = upload\n      this.uploaderEvents[file.id] = createEventTracker(this.core)\n\n      this.onFileRemove(file.id, (targetFileID) => {\n        this.resetUploaderReferences(file.id)\n        resolve(`upload ${targetFileID} was removed`)\n      })\n\n      this.onPause(file.id, (isPaused) => {\n        isPaused ? upload.abort() : upload.start()\n      })\n\n      this.onPauseAll(file.id, () => {\n        upload.abort()\n      })\n\n      this.onCancelAll(file.id, () => {\n        this.resetUploaderReferences(file.id)\n      })\n\n      this.onResumeAll(file.id, () => {\n        if (file.error) {\n          upload.abort()\n        }\n        upload.start()\n      })\n\n      upload.start()\n      this.core.emit('core:upload-started', file.id, upload)\n    })\n  }\n\n  uploadRemote (file, current, total) {\n    this.resetUploaderReferences(file.id)\n\n    return new Promise((resolve, reject) => {\n      this.core.log(file.remote.url)\n      if (file.serverToken) {\n        this.connectToServerSocket(file)\n      } else {\n        let endpoint = this.opts.endpoint\n        if (file.tus && file.tus.endpoint) {\n          endpoint = file.tus.endpoint\n        }\n\n        this.core.emitter.emit('core:upload-started', file.id)\n\n        fetch(file.remote.url, {\n          method: 'post',\n          credentials: 'include',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(Object.assign({}, file.remote.body, {\n            endpoint,\n            protocol: 'tus',\n            size: file.data.size,\n            metadata: file.meta\n          }))\n        })\n        .then((res) => {\n          if (res.status < 200 && res.status > 300) {\n            return reject(res.statusText)\n          }\n\n          res.json().then((data) => {\n            const token = data.token\n            file = this.getFile(file.id)\n            file.serverToken = token\n            this.updateFile(file)\n            this.connectToServerSocket(file)\n            resolve()\n          })\n        })\n      }\n    })\n  }\n\n  connectToServerSocket (file) {\n    const token = file.serverToken\n    const host = getSocketHost(file.remote.host)\n    const socket = new UppySocket({ target: `${host}/api/${token}` })\n    this.uploaderSockets[file.id] = socket\n    this.uploaderEvents[file.id] = createEventTracker(this.core)\n\n    this.onFileRemove(file.id, () => socket.send('pause', {}))\n\n    this.onPause(file.id, (isPaused) => {\n      isPaused ? socket.send('pause', {}) : socket.send('resume', {})\n    })\n\n    this.onPauseAll(file.id, () => socket.send('pause', {}))\n\n    this.onCancelAll(file.id, () => socket.send('pause', {}))\n\n    this.onResumeAll(file.id, () => {\n      if (file.error) {\n        socket.send('pause', {})\n      }\n      socket.send('resume', {})\n    })\n\n    this.onRetry(file.id, () => {\n      socket.send('pause', {})\n      socket.send('resume', {})\n    })\n\n    this.onRetryAll(file.id, () => {\n      socket.send('pause', {})\n      socket.send('resume', {})\n    })\n\n    socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\n\n    socket.on('success', (data) => {\n      this.core.emitter.emit('core:upload-success', file.id, data, data.url)\n      this.resetUploaderReferences(file.id)\n    })\n  }\n\n  getFile (fileID) {\n    return this.core.state.files[fileID]\n  }\n\n  updateFile (file) {\n    const files = Object.assign({}, this.core.state.files, {\n      [file.id]: file\n    })\n    this.core.setState({ files })\n  }\n\n  onReceiveUploadUrl (file, uploadURL) {\n    const currentFile = this.getFile(file.id)\n    if (!currentFile) return\n    // Only do the update if we didn't have an upload URL yet.\n    if (!currentFile.tus || currentFile.tus.uploadUrl !== uploadURL) {\n      const newFile = Object.assign({}, currentFile, {\n        tus: Object.assign({}, currentFile.tus, {\n          uploadUrl: uploadURL\n        })\n      })\n      this.updateFile(newFile)\n    }\n  }\n\n  onFileRemove (fileID, cb) {\n    this.uploaderEvents[fileID].on('core:file-removed', (targetFileID) => {\n      if (fileID === targetFileID) cb(targetFileID)\n    })\n  }\n\n  onPause (fileID, cb) {\n    this.uploaderEvents[fileID].on('core:upload-pause', (targetFileID, isPaused) => {\n      if (fileID === targetFileID) {\n        // const isPaused = this.core.pauseResume(fileID)\n        cb(isPaused)\n      }\n    })\n  }\n\n  onRetry (fileID, cb) {\n    this.uploaderEvents[fileID].on('core:upload-retry', (targetFileID) => {\n      if (fileID === targetFileID) {\n        cb()\n      }\n    })\n  }\n\n  onRetryAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('core:retry-all', (filesToRetry) => {\n      if (!this.core.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onPauseAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('core:pause-all', () => {\n      if (!this.core.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onCancelAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('core:cancel-all', () => {\n      if (!this.core.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onResumeAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('core:resume-all', () => {\n      if (!this.core.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  uploadFiles (files) {\n    const promises = files.map((file, index) => {\n      const current = parseInt(index, 10) + 1\n      const total = files.length\n\n      if (!file.isRemote) {\n        return this.upload(file, current, total)\n      } else {\n        return this.uploadRemote(file, current, total)\n      }\n    })\n\n    return settle(promises)\n  }\n\n  handleUpload (fileIDs) {\n    if (fileIDs.length === 0) {\n      this.core.log('Tus: no files to upload!')\n      return Promise.resolve()\n    }\n\n    this.core.log('Tus is uploading...')\n    const filesToUpload = fileIDs.map((fileID) => this.core.getFile(fileID))\n\n    return this.uploadFiles(filesToUpload)\n  }\n\n  addResumableUploadsCapabilityFlag () {\n    const newCapabilities = Object.assign({}, this.core.getState().capabilities)\n    newCapabilities.resumableUploads = true\n    this.core.setState({\n      capabilities: newCapabilities\n    })\n  }\n\n  install () {\n    this.addResumableUploadsCapabilityFlag()\n    this.core.addUploader(this.handleUpload)\n\n    this.core.on('core:reset-progress', this.handleResetProgress)\n\n    if (this.opts.autoRetry) {\n      this.core.on('back-online', this.core.retryAll)\n    }\n  }\n\n  uninstall () {\n    this.core.removeUploader(this.handleUpload)\n\n    if (this.opts.autoRetry) {\n      this.core.off('back-online', this.core.retryAll)\n    }\n  }\n}\n"]}